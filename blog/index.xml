<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on Amitrajit Bose</title>
    <link>https://amitrajitbose.github.io/blog/</link>
    <description>Recent content in Blogs on Amitrajit Bose</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Wed, 26 Dec 2018 12:20:32 +0530</lastBuildDate>
    
	<atom:link href="https://amitrajitbose.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Hiding Input Cells On Jupyter Notebook</title>
      <link>https://amitrajitbose.github.io/blog/hiding-input-cells-jupyter-notebook/</link>
      <pubDate>Wed, 26 Dec 2018 12:20:32 +0530</pubDate>
      
      <guid>https://amitrajitbose.github.io/blog/hiding-input-cells-jupyter-notebook/</guid>
      <description>Why Needed ? Sometimes we don&amp;rsquo;t want to show the code during presentation of the notebook, or sometimes the code can look really clumsy. Taking care of the code while tearing your hairs to find a better solution to a problem simultaneously is quite a mammoth task. Most tutorials on the web would suggest you to install nbextensions, an open-source notebook extension package for Jupyter notebooks. Definitely that is clean and easy, but I just don&amp;rsquo;t like installing things and junking up my workstation, rather I&amp;rsquo;d write a custom code to solve the problem.</description>
    </item>
    
    <item>
      <title>SQL Handbook</title>
      <link>https://amitrajitbose.github.io/blog/sqlhandbook/</link>
      <pubDate>Tue, 18 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://amitrajitbose.github.io/blog/sqlhandbook/</guid>
      <description>SQL Handbook Author : Amitrajit Bose Data Types in Oracle SQL  VARCHAR2(size) NVARCHAR2(size) NUMBER[(precision) LONG DATE BINARY_FLOAT BINARY_DOUBLE CHAR [(size)] N.B: This tutorial uses SQLite, although most features are same as Oracle SQL and other variants  SQL Manipulation  Create Table CREATE TABLE celebs(id INTEGER, name TEXT, age INTEGER ); Insert Rows INSERT INTO celebs (id, name, age) VALUES (1, &#39;Justin Bieber&#39;, 21); Select Queries SELECT * FROM mytable; Update Value UPDATE celebs SET age = 22 WHERE id = 1; Alter Table ALTER TABLE celebs ADD COLUMN twitter_handle TEXT; Delete Rows DELETE FROM celebs WHERE twitter_handle IS NULL; Add Constraint CREATE TABLE awards (id INTEGER PRIMARY KEY, recipient TEXT NOT NULL, award_name TEXT DEFAULT &amp;quot;Grammy&amp;quot; );</description>
    </item>
    
    <item>
      <title>Numpy 101</title>
      <link>https://amitrajitbose.github.io/blog/numpy101/</link>
      <pubDate>Sun, 09 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://amitrajitbose.github.io/blog/numpy101/</guid>
      <description>Introduction Numpy is a python library that provides functions that are especially useful when you have to work with large arrays and matrices of numeric data, like doing matrix matrix multiplications. Also, Numpy is battle tested and optimized so that it runs fast, much faster than if you were working with Python lists directly.
The array object class is the foundation of Numpy, and Numpy arrays are like lists in Python, except that every thing inside an array must be of the same type, like int or float.</description>
    </item>
    
    <item>
      <title>Dual Boot Ubuntu with Windows</title>
      <link>https://amitrajitbose.github.io/blog/installingubuntudualboot/</link>
      <pubDate>Tue, 21 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://amitrajitbose.github.io/blog/installingubuntudualboot/</guid>
      <description>Tired of the black screen on Command Prompt, enough of using the mouse to guide the pointer through the screen, you now want to code directly on the Terminal or more appropriately get a bit of that geeky feeling as a computer scientist or a budding hacker, who magically writes commands on the Terminal window and transforms the world.
Well, coming back to reality - using a Linux distribution can be one of the most liberating feeling at some times of your career.</description>
    </item>
    
    <item>
      <title>Intro To Database Management System</title>
      <link>https://amitrajitbose.github.io/blog/intro_dbms/</link>
      <pubDate>Tue, 21 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://amitrajitbose.github.io/blog/intro_dbms/</guid>
      <description>Introduction To DBMS Course PPT
Schema &amp;amp; Instance  Schema - A schema is a physical or logical structure of the data-base. The basically comprise the columns along with the table. Instance - This is the actual data, when the schema is populated by real values and data entries in the form of rows.  Data Model  It is the collection of tools that describe the data. Data : The data itself is an integral part of the data-base.</description>
    </item>
    
    <item>
      <title>Intro To Relational Models</title>
      <link>https://amitrajitbose.github.io/blog/intro_relationalmodels/</link>
      <pubDate>Tue, 21 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://amitrajitbose.github.io/blog/intro_relationalmodels/</guid>
      <description>Introduction To Relational Models Chapter Material
Relation - an unordered collection of attributes or fields or columns of a table.
Attributes - each column is an attribute.
Domain - set of possible values that an attribute can take.
Attribute Value - the data in a certain row and column, corresponing to a certain attribute. They are normally atomic, i.e indivisible data type. Mathematically, relation schema is a subset of multiple domain sets, or we can say a relational schema is a collection of attributes.</description>
    </item>
    
    <item>
      <title>Creating a New Theme</title>
      <link>https://amitrajitbose.github.io/blog/creating-a-new-theme/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://amitrajitbose.github.io/blog/creating-a-new-theme/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>https://amitrajitbose.github.io/blog/goisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://amitrajitbose.github.io/blog/goisforlovers/</guid>
      <description>Hugo uses the excellent go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in go templates.
This document is a brief primer on using go templates.</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>https://amitrajitbose.github.io/blog/hugoisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://amitrajitbose.github.io/blog/hugoisforlovers/</guid>
      <description>Step 1. Install Hugo Goto hugo releases and download the appropriate version for your os and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at installing hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
 Clone the hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:</description>
    </item>
    
    <item>
      <title>Migrate to Hugo from Jekyll</title>
      <link>https://amitrajitbose.github.io/blog/migrate-from-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://amitrajitbose.github.io/blog/migrate-from-jekyll/</guid>
      <description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png  should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png  Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description>
    </item>
    
  </channel>
</rss>